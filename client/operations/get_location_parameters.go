// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetLocationParams creates a new GetLocationParams object
// with the default values initialized.
func NewGetLocationParams() *GetLocationParams {
	var ()
	return &GetLocationParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetLocationParamsWithTimeout creates a new GetLocationParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetLocationParamsWithTimeout(timeout time.Duration) *GetLocationParams {
	var ()
	return &GetLocationParams{

		timeout: timeout,
	}
}

// NewGetLocationParamsWithContext creates a new GetLocationParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetLocationParamsWithContext(ctx context.Context) *GetLocationParams {
	var ()
	return &GetLocationParams{

		Context: ctx,
	}
}

// NewGetLocationParamsWithHTTPClient creates a new GetLocationParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetLocationParamsWithHTTPClient(client *http.Client) *GetLocationParams {
	var ()
	return &GetLocationParams{
		HTTPClient: client,
	}
}

/*GetLocationParams contains all the parameters to send to the API endpoint
for the get location operation typically these are written to a http.Request
*/
type GetLocationParams struct {

	/*CompanyID
	  company id

	*/
	CompanyID string
	/*SectorID
	  sector id

	*/
	SectorID string
	/*Vel
	  velocity

	*/
	Vel string
	/*X
	  x coordinate

	*/
	X string
	/*Y
	  y coordinate

	*/
	Y string
	/*Z
	  z coordinate

	*/
	Z string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get location params
func (o *GetLocationParams) WithTimeout(timeout time.Duration) *GetLocationParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get location params
func (o *GetLocationParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get location params
func (o *GetLocationParams) WithContext(ctx context.Context) *GetLocationParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get location params
func (o *GetLocationParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get location params
func (o *GetLocationParams) WithHTTPClient(client *http.Client) *GetLocationParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get location params
func (o *GetLocationParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithCompanyID adds the companyID to the get location params
func (o *GetLocationParams) WithCompanyID(companyID string) *GetLocationParams {
	o.SetCompanyID(companyID)
	return o
}

// SetCompanyID adds the companyId to the get location params
func (o *GetLocationParams) SetCompanyID(companyID string) {
	o.CompanyID = companyID
}

// WithSectorID adds the sectorID to the get location params
func (o *GetLocationParams) WithSectorID(sectorID string) *GetLocationParams {
	o.SetSectorID(sectorID)
	return o
}

// SetSectorID adds the sectorId to the get location params
func (o *GetLocationParams) SetSectorID(sectorID string) {
	o.SectorID = sectorID
}

// WithVel adds the vel to the get location params
func (o *GetLocationParams) WithVel(vel string) *GetLocationParams {
	o.SetVel(vel)
	return o
}

// SetVel adds the vel to the get location params
func (o *GetLocationParams) SetVel(vel string) {
	o.Vel = vel
}

// WithX adds the x to the get location params
func (o *GetLocationParams) WithX(x string) *GetLocationParams {
	o.SetX(x)
	return o
}

// SetX adds the x to the get location params
func (o *GetLocationParams) SetX(x string) {
	o.X = x
}

// WithY adds the y to the get location params
func (o *GetLocationParams) WithY(y string) *GetLocationParams {
	o.SetY(y)
	return o
}

// SetY adds the y to the get location params
func (o *GetLocationParams) SetY(y string) {
	o.Y = y
}

// WithZ adds the z to the get location params
func (o *GetLocationParams) WithZ(z string) *GetLocationParams {
	o.SetZ(z)
	return o
}

// SetZ adds the z to the get location params
func (o *GetLocationParams) SetZ(z string) {
	o.Z = z
}

// WriteToRequest writes these params to a swagger request
func (o *GetLocationParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// query param company_id
	qrCompanyID := o.CompanyID
	qCompanyID := qrCompanyID
	if qCompanyID != "" {
		if err := r.SetQueryParam("company_id", qCompanyID); err != nil {
			return err
		}
	}

	// query param sector_id
	qrSectorID := o.SectorID
	qSectorID := qrSectorID
	if qSectorID != "" {
		if err := r.SetQueryParam("sector_id", qSectorID); err != nil {
			return err
		}
	}

	// query param vel
	qrVel := o.Vel
	qVel := qrVel
	if qVel != "" {
		if err := r.SetQueryParam("vel", qVel); err != nil {
			return err
		}
	}

	// query param x
	qrX := o.X
	qX := qrX
	if qX != "" {
		if err := r.SetQueryParam("x", qX); err != nil {
			return err
		}
	}

	// query param y
	qrY := o.Y
	qY := qrY
	if qY != "" {
		if err := r.SetQueryParam("y", qY); err != nil {
			return err
		}
	}

	// query param z
	qrZ := o.Z
	qZ := qrZ
	if qZ != "" {
		if err := r.SetQueryParam("z", qZ); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
